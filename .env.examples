# ===========================
# Environment Configuration
# ===========================

# Server Configuration
NODE_ENV=development
PORT=5000
APP_NAME=E-Commerce Demo
FRONTEND_BASE_URL=http://localhost:5000

# Database Configuration
MONGODB_URI=mongodb://localhost:27017/ecommerce_demo
MONGODB_USERNAME=
MONGODB_PASSWORD=

# JWT Configuration
JWT_SECRET=your_super_secret_jwt_key_here_minimum_32_characters
JWT_REFRESH_SECRET=your_super_secret_refresh_key_here_minimum_32_characters
JWT_EXPIRE=24h
JWT_REFRESH_EXPIRE=7d

# Email Configuration (Nodemailer)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=your_email@gmail.com
EMAIL_PASS=your_email_app_password
EMAIL_SECURE=false

# Google OAuth Configuration (Optional)
GOOGLE_CLIENT_ID=your_google_client_id_here
GOOGLE_CLIENT_SECRET=your_google_client_secret_here

# Cloudinary Configuration (for image uploads)
CLOUDINARY_CLOUD_NAME=your_cloudinary_cloud_name
CLOUDINARY_API_KEY=your_cloudinary_api_key
CLOUDINARY_API_SECRET=your_cloudinary_api_secret

# Stripe Configuration (for payments)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here
STRIPE_WEBHOOK_KEY=whsec_your_stripe_webhook_secret_here

# CORS Configuration
CORS_ORIGIN=http://localhost:5000
CORS_CREDENTIALS=true


# Email Verification Settings
EMAIL_VERIFICATION_EXPIRE_HOURS=24
PASSWORD_RESET_EXPIRE_HOURS=1

# Cookie Settings
COOKIE_SECURE=false
COOKIE_SAME_SITE=strict
COOKIE_HTTP_ONLY=true

# ===========================
# Setup Instructions
# ===========================
# 1. Copy this file to .env
# 2. Replace all placeholder values with your actual credentials
# 3. Never commit .env file to version control
# 4. Ensure all required services (MongoDB, etc.) are running

# ===========================
# Service Setup Instructions
# ===========================

# MongoDB Setup:
# - Install MongoDB: https://docs.mongodb.com/manual/installation/
# - Start MongoDB service
# - Database will be created automatically

# Email Setup (Gmail):
# - Enable 2-factor authentication
# - Generate App Password: https://support.google.com/accounts/answer/185833
# - Use App Password in EMAIL_PASS

# Cloudinary Setup:
# - Sign up at https://cloudinary.com
# - Get credentials from Dashboard

# Stripe Setup:
# - Sign up at https://stripe.com
# - Get API keys from Dashboard
# - Set up webhooks for payment processing

# Google OAuth Setup:
# - Go to Google Cloud Console
# - Create OAuth 2.0 credentials
# - Add authorized redirect URIs

# ===========================
# Development vs Production
# ===========================
# Development:
# - Use test API keys (Stripe test keys)
# - Set NODE_ENV=development
# - Use local MongoDB instance

# Production:
# - Use live API keys
# - Set NODE_ENV=production
# - Use production MongoDB cluster
# - Set secure cookie options
# - Use HTTPS URLs